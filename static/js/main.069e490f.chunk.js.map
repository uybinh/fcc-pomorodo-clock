{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["Controller","stringArray","buttonStyle","name","this","props","react_default","a","createElement","style","id","concat","split","toUpperCase","slice","join","onClick","onIncrease","className","length","onDecrease","Component","Button","cursor","TimeDisplay","time","second","min","timeLeft","color","label","String","padStart","Math","floor","App","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","defaultState","breakLength","sessionLength","isCounting","isBreak","countID","state","handleChange","bind","assertThisInitialized","startStop","reset","count","type","property","condition","increase","decrease","setState","defineProperty","setTimeLeft","stopBuzz","buzz","changeTimer","clearInterval","setInterval","audioBeep","currentTime","play","pause","_this2","timeLabel","App_TimeDisplay","App_Button","App_Controller","preload","src","ref","audio","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.069e490f.chunk.js","sourcesContent":["import React, { Component } from \"react\"\nimport \"./App.css\"\n\nfunction capitalize(string) {\n  const stringArray = string.split(\"\")\n  return [stringArray[0].toUpperCase()].concat(stringArray.slice(1)).join(\"\")\n}\n\nfunction formatTime(time) {\n  const second = String(time % 60).padStart(2, \"0\")\n  const min = String(Math.floor(time / 60)).padStart(2, \"0\")\n  return `${min}:${second}`\n}\n\nclass Controller extends Component {\n  render() {\n    const controllerStyle = {}\n    const buttonStyle = {}\n    const name = this.props.name\n    return (\n      <div style={controllerStyle} id={`${name}-control`}>\n        {/* Label */}\n        <div id={`${name}-label`}>{`${capitalize(name)} Length`}</div>\n\n        {/* Increase */}\n        <div\n          onClick={this.props.onIncrease}\n          style={buttonStyle}\n          id={`${name}-increment`}\n        >\n          <i className=\"fas fa-arrow-alt-circle-up\" />\n        </div>\n\n        {/* Length display */}\n        <div id={`${name}-length`}>{this.props.length / 60}</div>\n\n        {/* Decrease */}\n        <div\n          onClick={this.props.onDecrease}\n          style={buttonStyle}\n          id={`${name}-decrement`}\n        >\n          <i className=\"fas fa-arrow-alt-circle-down\" />\n        </div>\n      </div>\n    )\n  }\n}\n\nclass Button extends Component {\n  render() {\n    const style = {\n      cursor: \"pointer\"\n    }\n    return (\n      <div\n        className=\"button\"\n        style={style}\n        onClick={this.props.onClick}\n        id={this.props.id}\n      >\n        {this.props.name}\n      </div>\n    )\n  }\n}\n\nclass TimeDisplay extends Component {\n  render() {\n    const style = {}\n    const timeLeft = this.props.timeLeft\n    style.color = timeLeft < 60 ? \"red\" : \"inherit\"\n    return (\n      <div id=\"timer\" style={style}>\n        <div id=\"timer-label\">{this.props.label}</div>\n        <div id=\"time-left\">{formatTime(timeLeft)}</div>\n      </div>\n    )\n  }\n}\n\nclass App extends Component {\n  constructor(props) {\n    super(props)\n    this.defaultState = {\n      breakLength: 5 * 60,\n      sessionLength: 25 * 60,\n      isCounting: false,\n      isBreak: false,\n      timeLeft: 25 * 60,\n      countID: null\n    }\n    this.state = {\n      breakLength: 5 * 60,\n      sessionLength: 25 * 60,\n      isCounting: false,\n      isBreak: false,\n      timeLeft: 25 * 60,\n      countID: null\n    }\n    this.handleChange = this.handleChange.bind(this)\n    this.startStop = this.startStop.bind(this)\n    this.reset = this.reset.bind(this)\n    this.count = this.count.bind(this)\n  }\n\n  handleChange(type, property) {\n    const condition = {\n      increase: this.state[property] >= 3600,\n      decrease: this.state[property] < 120\n    }\n    const delta = {\n      increase: +60,\n      decrease: -60\n    }\n    if (this.state.isCounting || condition[type]) return\n    const length = this.state[property] + delta[type]\n    this.setState({ [property]: length })\n    this.setTimeLeft(property, length)\n  }\n\n  setTimeLeft(property, time) {\n    if (property === \"sessionLength\") {\n      this.setState({ timeLeft: time })\n    }\n  }\n\n  reset() {\n    this.state.isCounting && this.startStop()\n    this.stopBuzz()\n    this.setState(this.defaultState)\n  }\n\n  count() {\n    if (this.state.timeLeft === 0) {\n      this.buzz()\n      this.changeTimer()\n      return\n    }\n    this.setState({\n      timeLeft: this.state.timeLeft - 1,\n      isCounting: true\n    })\n  }\n\n  changeTimer() {\n    this.startStop()\n    const timeLeft = this.state.isBreak\n      ? this.state.sessionLength\n      : this.state.breakLength\n    this.setState({\n      isBreak: !this.state.isBreak,\n      timeLeft\n    })\n    this.startStop()\n  }\n\n  startStop() {\n    if (this.state.isCounting) {\n      this.setState({\n        isCounting: false,\n        countID: clearInterval(this.state.countID)\n      })\n    } else {\n      this.setState({\n        isCounting: true,\n        countID: setInterval(this.count, 1000)\n      })\n    }\n  }\n\n  buzz() {\n    this.audioBeep.currentTime = 0\n    this.audioBeep.play()\n  }\n\n  stopBuzz() {\n    this.audioBeep.pause()\n    this.audioBeep.currentTime = 0\n  }\n\n  render() {\n    const timeLabel = this.state.isBreak ? \"Break\" : \"Session\"\n    return (\n      <div className=\"container\">\n        <h1>FCC Pomorodo Clock</h1>\n        <TimeDisplay label={timeLabel} timeLeft={this.state.timeLeft} />\n\n        <div className=\"buttons-wrapper\">\n          <Button\n            id=\"start_stop\"\n            name={[\n              <i className=\"fas fa-play\" />,\n              <i className=\"fas fa-stop\" />\n            ]}\n            onClick={this.startStop}\n          />\n          <Button\n            id=\"reset\"\n            name={<i className=\"fas fa-redo-alt\" />}\n            onClick={this.reset}\n          />\n        </div>\n\n        <div className=\"controllers-wrapper\">\n          <Controller\n            name=\"break\"\n            length={this.state.breakLength}\n            onIncrease={() => this.handleChange(\"increase\", \"breakLength\")}\n            onDecrease={() => this.handleChange(\"decrease\", \"breakLength\")}\n          />\n          <Controller\n            name=\"session\"\n            length={this.state.sessionLength}\n            onIncrease={() => this.handleChange(\"increase\", \"sessionLength\")}\n            onDecrease={() => this.handleChange(\"decrease\", \"sessionLength\")}\n          />\n        </div>\n\n        <audio\n          id=\"beep\"\n          preload=\"auto\"\n          src=\"https://goo.gl/65cBl1\"\n          ref={audio => (this.audioBeep = audio)}\n        />\n      </div>\n    )\n  }\n}\n\nexport default App\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}